digraph LALR_Automaton {
    // State 0
    0 [label="State 0\n0 $accept: • program $end\n\nTOKEN_ID      shift, and go to state 1\nTOKEN_INT     shift, and go to state 2\nTOKEN_MINUS   shift, and go to state 3\nTOKEN_LPAREN  shift, and go to state 4\n\nprogram         go to state 5\nstatement_list  go to state 6\nstatement       go to state 7\nassignment      go to state 8\nexpr            go to state 9\nterm            go to state 10\nfactor          go to state 11"]

    // State 1
    1 [label="State 1\n6 assignment: TOKEN_ID • TOKEN_ASSIGN expr\n16 factor: TOKEN_ID •\n\nTOKEN_ASSIGN  shift, and go to state 12\n\n$default  reduce using rule 16 (factor)"]

    // State 2
    2 [label="State 2\n15 factor: TOKEN_INT •\n\n$default  reduce using rule 15 (factor)"]

    // State 3
    3 [label="State 3\n13 factor: TOKEN_MINUS • factor\n\nTOKEN_ID      shift, and go to state 13\nTOKEN_INT     shift, and go to state 2\nTOKEN_MINUS   shift, and go to state 3\nTOKEN_LPAREN  shift, and go to state 4\n\nfactor  go to state 14"]

    // State 4
    4 [label="State 4\n14 factor: TOKEN_LPAREN • expr TOKEN_RPAREN\n\nTOKEN_ID      shift, and go to state 13\nTOKEN_INT     shift, and go to state 2\nTOKEN_MINUS   shift, and go to state 3\nTOKEN_LPAREN  shift, and go to state 4\n\nexpr    go to state 15\nterm    go to state 10\nfactor  go to state 11"]

    // State 5
    5 [label="State 5\n0 $accept: program • $end\n\n$end  shift, and go to state 16"]

    // State 6
    6 [label="State 6\n1 program: statement_list •\n3 statement_list: statement_list • statement\n\nTOKEN_ID      shift, and go to state 1\nTOKEN_INT     shift, and go to state 2\nTOKEN_MINUS   shift, and go to state 3\nTOKEN_LPAREN  shift, and go to state 4\n\n$default  reduce using rule 1 (program)\n\nstatement   go to state 17\nassignment  go to state 8\nexpr        go to state 9\nterm        go to state 10\nfactor      go to state 11"]

    // State 7
    7 [label="State 7\n2 statement_list: statement •\n\n$default  reduce using rule 2 (statement_list)"]

    // State 8
    8 [label="State 8\n5 statement: assignment • TOKEN_SEMI\n\nTOKEN_SEMI  shift, and go to state 18"]

    // State 9
    9 [label="State 9\n4 statement: expr • TOKEN_SEMI\n7 expr: expr • TOKEN_PLUS term\n8     | expr • TOKEN_MINUS term\n\nTOKEN_PLUS   shift, and go to state 19\nTOKEN_MINUS  shift, and go to state 20\nTOKEN_SEMI   shift, and go to state 21"]

    // State 10
    10 [label="State 10\n9 expr: term •\n10 term: term • TOKEN_MUL factor\n11     | term • TOKEN_DIV factor\n\nTOKEN_MUL  shift, and go to state 22\nTOKEN_DIV  shift, and go to state 23\n\n$default  reduce using rule 9 (expr)"]

    // State 11
    11 [label="State 11\n12 term: factor •\n\n$default  reduce using rule 12 (term)"]

    // State 12
    12 [label="State 12\n6 assignment: TOKEN_ID TOKEN_ASSIGN • expr\n\nTOKEN_ID      shift, and go to state 13\nTOKEN_INT     shift, and go to state 2\nTOKEN_MINUS   shift, and go to state 3\nTOKEN_LPAREN  shift, and go to state 4\n\nexpr    go to state 24\nterm    go to state 10\nfactor  go to state 11"]

    // State 13
    13 [label="State 13\n16 factor: TOKEN_ID •\n\n$default  reduce using rule 16 (factor)"]

    // State 14
    14 [label="State 14\n13 factor: TOKEN_MINUS factor •\n\n$default  reduce using rule 13 (factor)"]

    // State 15
    15 [label="State 15\n7 expr: expr • TOKEN_PLUS term\n8     | expr • TOKEN_MINUS term\n14 factor: TOKEN_LPAREN expr • TOKEN_RPAREN\n\nTOKEN_PLUS    shift, and go to state 19\nTOKEN_MINUS   shift, and go to state 20\nTOKEN_RPAREN  shift, and go to state 25"]

    // State 16
    16 [label="State 16\n0 $accept: program $end •\n\n$default  accept"]

    // State 17
    17 [label="State 17\n3 statement_list: statement_list statement •\n\n$default  reduce using rule 3 (statement_list)"]

    // State 18
    18 [label="State 18\n5 statement: assignment TOKEN_SEMI •\n\n$default  reduce using rule 5 (statement)"]

    // State 19
    19 [label="State 19\n7 expr: expr TOKEN_PLUS • term\n\nTOKEN_ID      shift, and go to state 13\nTOKEN_INT     shift, and go to state 2\nTOKEN_MINUS   shift, and go to state 3\nTOKEN_LPAREN  shift, and go to state 4\n\nterm    go to state 26\nfactor  go to state 11"]

    // State 20
    20 [label="State 20\n8 expr: expr TOKEN_MINUS • term\n\nTOKEN_ID      shift, and go to state 13\nTOKEN_INT     shift, and go to state 2\nTOKEN_MINUS   shift, and go to state 3\nTOKEN_LPAREN  shift, and go to state 4\n\nterm    go to state 27\nfactor  go to state 11"]

    // State 21
    21 [label="State 21\n4 statement: expr TOKEN_SEMI •\n\n$default  reduce using rule 4 (statement)"]

    // State 22
     22 [label="State 22\n10 term: term TOKEN_MUL • factor\n\nTOKEN_ID      shift, and go to state 13\nTOKEN_INT     shift, and go to state 2\nTOKEN_MINUS   shift, and go to state 3\nTOKEN_LPAREN  shift, and go to state 4\n\nfactor  go to state 28"]

    // State 23
    23 [label="State 23\n11 term: term TOKEN_DIV • factor\n\nTOKEN_ID      shift, and go to state 13\nTOKEN_INT     shift, and go to state 2\nTOKEN_MINUS   shift, and go to state 3\nTOKEN_LPAREN  shift, and go to state 4\n\nfactor  go to state 29"]

    // State 24
    24 [label="State 24\n6 assignment: TOKEN_ID TOKEN_ASSIGN expr •\n7 expr: expr • TOKEN_PLUS term\n8     | expr • TOKEN_MINUS term\n\nTOKEN_PLUS   shift, and go to state 19\nTOKEN_MINUS  shift, and go to state 20\n\n$default  reduce using rule 6 (assignment)"]

    // State 25
    25 [label="State 25\n14 factor: TOKEN_LPAREN expr TOKEN_RPAREN •\n\n$default  reduce using rule 14 (factor)"]

    // State 26
    26 [label="State 26\n7 expr: expr TOKEN_PLUS term •\n10 term: term • TOKEN_MUL factor\n11     | term • TOKEN_DIV factor\n\nTOKEN_MUL  shift, and go to state 22\nTOKEN_DIV  shift, and go to state 23\n\n$default  reduce using rule 7 (expr)"]

    // State 27
    27 [label="State 27\n8 expr: expr TOKEN_MINUS term •\n10 term: term • TOKEN_MUL factor\n11     | term • TOKEN_DIV factor\n\nTOKEN_MUL  shift, and go to state 22\nTOKEN_DIV  shift, and go to state 23\n\n$default  reduce using rule 8 (expr)"]

    // State 28
    28 [label="State 28\n10 term: term TOKEN_MUL factor •\n\n$default  reduce using rule 10 (term)"]

    // State 29
    29 [label="State 29\n11 term: term TOKEN_DIV factor •\n\n$default  reduce using rule 11 (term)"]

    // Transitions
    0 -> 1 [label="TOKEN_ID"]
    0 -> 2 [label="TOKEN_INT"]
    0 -> 3 [label="TOKEN_MINUS"]
    0 -> 4 [label="TOKEN_LPAREN"]
    0 -> 5 [label="program"]
    0 -> 6 [label="statement_list"]
    0 -> 7 [label="statement"]
    0 -> 8 [label="assignment"]
    0 -> 9 [label="expr"]
    0 -> 10 [label="term"]
    0 -> 11 [label="factor"]
    1 -> 12 [label="TOKEN_ASSIGN"]
    2 -> 15 [label="factor"]
    3 -> 14 [label="factor"]
    4 -> 25 [label="factor"]
    5 -> 16 [label="$end"]
    6 -> 16 [label="statement_list"]
    6 -> 17 [label="statement"]
    8 -> 18 [label="TOKEN_SEMI"]
    9 -> 21 [label="TOKEN_SEMI"]
    9 -> 19 [label="TOKEN_PLUS"]
    9 -> 20 [label="TOKEN_MINUS"]
    10 -> 22 [label="TOKEN_MUL"]
    10 -> 23 [label="TOKEN_DIV"]
    12 -> 13 [label="TOKEN_ID"]
    12 -> 2 [label="TOKEN_INT"]
    12 -> 3 [label="TOKEN_MINUS"]
    12 -> 4 [label="TOKEN_LPAREN"]
    19 -> 13 [label="TOKEN_ID"]
    19 -> 2 [label="TOKEN_INT"]
    19 -> 3 [label="TOKEN_MINUS"]
    19 -> 4 [label="TOKEN_LPAREN"]
    20 -> 13 [label="TOKEN_ID"]
    20 -> 2 [label="TOKEN_INT"]
    20 -> 3 [label="TOKEN_MINUS"]
    20 -> 4 [label="TOKEN_LPAREN"]
    22 -> 13 [label="TOKEN_ID"]
    22 -> 2 [label="TOKEN_INT"]
    22 -> 3 [label="TOKEN_MINUS"]
    22 -> 4 [label="TOKEN_LPAREN"]
    23 -> 13 [label="TOKEN_ID"]
    23 -> 2 [label="TOKEN_INT"]
    23 -> 3 [label="TOKEN_MINUS"]
    23 -> 4 [label="TOKEN_LPAREN"]
    24 -> 19 [label="TOKEN_PLUS"]
    24 -> 20 [label="TOKEN_MINUS"]
    26 -> 22 [label="TOKEN_MUL"]
    26 -> 23 [label="TOKEN_DIV"]
    27 -> 22 [label="TOKEN_MUL"]
    27 -> 23 [label="TOKEN_DIV"]
}
