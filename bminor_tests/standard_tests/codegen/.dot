digraph AST {

node [shape=record]

DECL_22 [label="{DECL_x | { <type> type | <value> value | <code> code | <next> next }}"];

TYPE_23 [label="{TYPE_INTEGER| { <subtype> subtype | <params> params}}"];

DECL_22:type -> TYPE_23;

EXPR_23 [label="{EXPR_INTEGER_LITERAL | { 1 }}"];

DECL_22:value -> EXPR_23;

DECL_22:next -> DECL_24;

DECL_24 [label="{DECL_main | { <type> type | <value> value | <code> code | <next> next }}"];

TYPE_25 [label="{TYPE_FUNCTION| { <subtype> subtype | <params> params}}"];

SUBTYPE_25 [label="{TYPE_INTEGER | { <subtype> subtype | <params> params }}"];

TYPE_25:subtype -> SUBTYPE_25;

DECL_24:type -> TYPE_25;

STMT_26 [label="{STMT_FOR | { <decl> decl | <init_expr> init_expr | <expr> expr | <next_expr> next_expr | <body> body | <else_body> else_body | <next> next }}"];

EXPR_27 [label="{EXPR_ASSIGN | { <left> left | <right> right }}"];

EXPR_28 [label="{EXPR_NAME | { x }}"];

EXPR_27:left -> EXPR_28;

EXPR_29 [label="{EXPR_INTEGER_LITERAL | { 0 }}"];

EXPR_27:right -> EXPR_29;

STMT_26:init_expr -> EXPR_27;

EXPR_30 [label="{EXPR_LT | { <left> left | <right> right }}"];

EXPR_31 [label="{EXPR_NAME | { x }}"];

EXPR_30:left -> EXPR_31;

EXPR_32 [label="{EXPR_INTEGER_LITERAL | { 11 }}"];

EXPR_30:right -> EXPR_32;

STMT_26:expr -> EXPR_30;

EXPR_33 [label="{EXPR_ASSIGN | { <left> left | <right> right }}"];

EXPR_34 [label="{EXPR_NAME | { x }}"];

EXPR_33:left -> EXPR_34;

EXPR_35 [label="{EXPR_ADD | { <left> left | <right> right }}"];

EXPR_36 [label="{EXPR_NAME | { x }}"];

EXPR_35:left -> EXPR_36;

EXPR_37 [label="{EXPR_INTEGER_LITERAL | { 1 }}"];

EXPR_35:right -> EXPR_37;

EXPR_33:right -> EXPR_35;

STMT_26:next_expr -> EXPR_33;

STMT_38 [label="{STMT_BLOCK | { <decl> decl | <init_expr> init_expr | <expr> expr | <next_expr> next_expr | <body> body | <else_body> else_body | <next> next }}"];

STMT_39 [label="{STMT_PRINT | { <decl> decl | <init_expr> init_expr | <expr> expr | <next_expr> next_expr | <body> body | <else_body> else_body | <next> next }}"];

EXPR_40 [label="{EXPR_ARG | { <left> left | <right> right }}"];

EXPR_41 [label="{EXPR_NAME | { x }}"];

EXPR_40:left -> EXPR_41;

STMT_39:expr -> EXPR_40;

STMT_38:body -> STMT_39;

STMT_26:body -> STMT_38;

STMT_42 [label="{STMT_RETURN | { <decl> decl | <init_expr> init_expr | <expr> expr | <next_expr> next_expr | <body> body | <else_body> else_body | <next> next }}"];

EXPR_43 [label="{EXPR_INTEGER_LITERAL | { 0 }}"];

STMT_42:expr -> EXPR_43;

STMT_26:next -> STMT_42;

DECL_24:code -> STMT_26;

}

