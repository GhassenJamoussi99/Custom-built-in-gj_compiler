digraph AST {

node [shape=record]

DECL_0 [label="{DECL_str | { <type> type | <value> value | <code> code | <next> next }}"];

TYPE_1 [label="{TYPE_STRING| { <subtype> subtype | <params> params}}"];

DECL_0:type -> TYPE_1;

EXPR_1 [label="{EXPR_STRING_LITERAL | { \"hello\" }}"];

DECL_0:value -> EXPR_1;

DECL_0:next -> DECL_2;

DECL_2 [label="{DECL_main | { <type> type | <value> value | <code> code | <next> next }}"];

TYPE_3 [label="{TYPE_FUNCTION| { <subtype> subtype | <params> params}}"];

SUBTYPE_3 [label="{TYPE_INTEGER | { <subtype> subtype | <params> params }}"];

TYPE_3:subtype -> SUBTYPE_3;

DECL_2:type -> TYPE_3;

STMT_4 [label="{STMT_PRINT | { <decl> decl | <init_expr> init_expr | <expr> expr | <next_expr> next_expr | <body> body | <else_body> else_body | <next> next }}"];

EXPR_5 [label="{EXPR_ARG | { <left> left | <right> right }}"];

EXPR_6 [label="{EXPR_NAME | { str }}"];

EXPR_5:left -> EXPR_6;

STMT_4:expr -> EXPR_5;

STMT_7 [label="{STMT_RETURN | { <decl> decl | <init_expr> init_expr | <expr> expr | <next_expr> next_expr | <body> body | <else_body> else_body | <next> next }}"];

EXPR_8 [label="{EXPR_INTEGER_LITERAL | { 0 }}"];

STMT_7:expr -> EXPR_8;

STMT_4:next -> STMT_7;

DECL_2:code -> STMT_4;

}

