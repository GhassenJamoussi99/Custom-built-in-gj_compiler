digraph AST {

node [shape=record]

DECL_0 [label="{DECL_str | { <type> type | <value> value | <code> code | <next> next }}"];

TYPE_1 [label="{TYPE_STRING| { <subtype> subtype | <params> params}}"];

DECL_0:type -> TYPE_1;

EXPR_1 [label="{EXPR_STRING_LITERAL | { \"hello\" }}"];

DECL_0:value -> EXPR_1;

DECL_0:next -> DECL_2;

DECL_2 [label="{DECL_str2 | { <type> type | <value> value | <code> code | <next> next }}"];

TYPE_3 [label="{TYPE_STRING| { <subtype> subtype | <params> params}}"];

DECL_2:type -> TYPE_3;

EXPR_3 [label="{EXPR_STRING_LITERAL | { \" world\" }}"];

DECL_2:value -> EXPR_3;

DECL_2:next -> DECL_4;

DECL_4 [label="{DECL_main | { <type> type | <value> value | <code> code | <next> next }}"];

TYPE_5 [label="{TYPE_FUNCTION| { <subtype> subtype | <params> params}}"];

SUBTYPE_5 [label="{TYPE_INTEGER | { <subtype> subtype | <params> params }}"];

TYPE_5:subtype -> SUBTYPE_5;

DECL_4:type -> TYPE_5;

STMT_6 [label="{STMT_DECL | { <decl> decl | <init_expr> init_expr | <expr> expr | <next_expr> next_expr | <body> body | <else_body> else_body | <next> next }}"];

DECL_7 [label="{DECL_str3 | { <type> type | <value> value | <code> code | <next> next }}"];

TYPE_8 [label="{TYPE_STRING| { <subtype> subtype | <params> params}}"];

DECL_7:type -> TYPE_8;

EXPR_8 [label="{EXPR_NAME | { str }}"];

DECL_7:value -> EXPR_8;

STMT_6:decl -> DECL_7;

STMT_9 [label="{STMT_IF_ELSE | { <decl> decl | <init_expr> init_expr | <expr> expr | <next_expr> next_expr | <body> body | <else_body> else_body | <next> next }}"];

EXPR_10 [label="{EXPR_EQ | { <left> left | <right> right }}"];

EXPR_11 [label="{EXPR_NAME | { str }}"];

EXPR_10:left -> EXPR_11;

EXPR_12 [label="{EXPR_NAME | { str3 }}"];

EXPR_10:right -> EXPR_12;

STMT_9:expr -> EXPR_10;

STMT_13 [label="{STMT_BLOCK | { <decl> decl | <init_expr> init_expr | <expr> expr | <next_expr> next_expr | <body> body | <else_body> else_body | <next> next }}"];

STMT_14 [label="{STMT_PRINT | { <decl> decl | <init_expr> init_expr | <expr> expr | <next_expr> next_expr | <body> body | <else_body> else_body | <next> next }}"];

EXPR_15 [label="{EXPR_ARG | { <left> left | <right> right }}"];

EXPR_16 [label="{EXPR_NAME | { str }}"];

EXPR_15:left -> EXPR_16;

STMT_14:expr -> EXPR_15;

STMT_13:body -> STMT_14;

STMT_9:body -> STMT_13;

STMT_17 [label="{STMT_RETURN | { <decl> decl | <init_expr> init_expr | <expr> expr | <next_expr> next_expr | <body> body | <else_body> else_body | <next> next }}"];

EXPR_18 [label="{EXPR_INTEGER_LITERAL | { 0 }}"];

STMT_17:expr -> EXPR_18;

STMT_9:next -> STMT_17;

STMT_6:next -> STMT_9;

DECL_4:code -> STMT_6;

}

