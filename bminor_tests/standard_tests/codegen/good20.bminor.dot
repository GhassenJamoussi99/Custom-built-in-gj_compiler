digraph AST {

node [shape=record]

DECL_0 [label="{DECL_test | { <type> type | <value> value | <code> code | <next> next }}"];

TYPE_1 [label="{TYPE_FUNCTION| { <subtype> subtype | <params> params}}"];

SUBTYPE_1 [label="{TYPE_INTEGER | { <subtype> subtype | <params> params }}"];

TYPE_1:subtype -> SUBTYPE_1;

PARAM_2 [label="{PARAM | { <name> name | <type> type | <next> next }}"];

SUBTYPE_3 [label="{TYPE_INTEGER | { <subtype> subtype | <params> params }}"];

PARAM_2:type -> TYPE_3;

PARAM_4 [label="{PARAM | { <name> name | <type> type | <next> next }}"];

SUBTYPE_5 [label="{TYPE_INTEGER | { <subtype> subtype | <params> params }}"];

PARAM_4:type -> TYPE_5;

PARAM_2:next -> PARAM_4;

TYPE_1:params -> PARAM_2;

DECL_0:type -> TYPE_1;

STMT_6 [label="{STMT_RETURN | { <decl> decl | <init_expr> init_expr | <expr> expr | <next_expr> next_expr | <body> body | <else_body> else_body | <next> next }}"];

EXPR_7 [label="{EXPR_ADD | { <left> left | <right> right }}"];

EXPR_8 [label="{EXPR_NAME | { a }}"];

EXPR_7:left -> EXPR_8;

EXPR_9 [label="{EXPR_NAME | { b }}"];

EXPR_7:right -> EXPR_9;

STMT_6:expr -> EXPR_7;

DECL_0:code -> STMT_6;

DECL_0:next -> DECL_10;

DECL_10 [label="{DECL_main | { <type> type | <value> value | <code> code | <next> next }}"];

TYPE_11 [label="{TYPE_FUNCTION| { <subtype> subtype | <params> params}}"];

SUBTYPE_11 [label="{TYPE_INTEGER | { <subtype> subtype | <params> params }}"];

TYPE_11:subtype -> SUBTYPE_11;

DECL_10:type -> TYPE_11;

STMT_12 [label="{STMT_DECL | { <decl> decl | <init_expr> init_expr | <expr> expr | <next_expr> next_expr | <body> body | <else_body> else_body | <next> next }}"];

DECL_13 [label="{DECL_i | { <type> type | <value> value | <code> code | <next> next }}"];

TYPE_14 [label="{TYPE_INTEGER| { <subtype> subtype | <params> params}}"];

DECL_13:type -> TYPE_14;

STMT_12:decl -> DECL_13;

STMT_14 [label="{STMT_EXPR | { <decl> decl | <init_expr> init_expr | <expr> expr | <next_expr> next_expr | <body> body | <else_body> else_body | <next> next }}"];

EXPR_15 [label="{EXPR_ASSIGN | { <left> left | <right> right }}"];

EXPR_16 [label="{EXPR_NAME | { i }}"];

EXPR_15:left -> EXPR_16;

EXPR_17 [label="{EXPR_INTEGER_LITERAL | { 0 }}"];

EXPR_15:right -> EXPR_17;

STMT_14:expr -> EXPR_15;

STMT_18 [label="{STMT_PRINT | { <decl> decl | <init_expr> init_expr | <expr> expr | <next_expr> next_expr | <body> body | <else_body> else_body | <next> next }}"];

EXPR_19 [label="{EXPR_ARG | { <left> left | <right> right }}"];

EXPR_20 [label="{EXPR_STRING_LITERAL | { \"Numbers\n\" }}"];

EXPR_19:left -> EXPR_20;

STMT_18:expr -> EXPR_19;

STMT_21 [label="{STMT_WHILE | { <decl> decl | <init_expr> init_expr | <expr> expr | <next_expr> next_expr | <body> body | <else_body> else_body | <next> next }}"];

EXPR_22 [label="{EXPR_LT | { <left> left | <right> right }}"];

EXPR_23 [label="{EXPR_NAME | { i }}"];

EXPR_22:left -> EXPR_23;

EXPR_24 [label="{EXPR_INTEGER_LITERAL | { 30 }}"];

EXPR_22:right -> EXPR_24;

STMT_21:expr -> EXPR_22;

STMT_25 [label="{STMT_BLOCK | { <decl> decl | <init_expr> init_expr | <expr> expr | <next_expr> next_expr | <body> body | <else_body> else_body | <next> next }}"];

STMT_26 [label="{STMT_PRINT | { <decl> decl | <init_expr> init_expr | <expr> expr | <next_expr> next_expr | <body> body | <else_body> else_body | <next> next }}"];

EXPR_27 [label="{EXPR_ARG | { <left> left | <right> right }}"];

EXPR_28 [label="{EXPR_CALL | { <left> left | <right> right }}"];

EXPR_29 [label="{EXPR_NAME | { test }}"];

EXPR_28:left -> EXPR_29;

EXPR_30 [label="{EXPR_ARG | { <left> left | <right> right }}"];

EXPR_31 [label="{EXPR_NAME | { i }}"];

EXPR_30:left -> EXPR_31;

EXPR_32 [label="{EXPR_ARG | { <left> left | <right> right }}"];

EXPR_33 [label="{EXPR_NAME | { i }}"];

EXPR_32:left -> EXPR_33;

EXPR_30:right -> EXPR_32;

EXPR_28:right -> EXPR_30;

EXPR_27:left -> EXPR_28;

STMT_26:expr -> EXPR_27;

STMT_34 [label="{STMT_EXPR | { <decl> decl | <init_expr> init_expr | <expr> expr | <next_expr> next_expr | <body> body | <else_body> else_body | <next> next }}"];

EXPR_35 [label="{EXPR_ASSIGN | { <left> left | <right> right }}"];

EXPR_36 [label="{EXPR_NAME | { i }}"];

EXPR_35:left -> EXPR_36;

EXPR_37 [label="{EXPR_ADD | { <left> left | <right> right }}"];

EXPR_38 [label="{EXPR_NAME | { i }}"];

EXPR_37:left -> EXPR_38;

EXPR_39 [label="{EXPR_INTEGER_LITERAL | { 1 }}"];

EXPR_37:right -> EXPR_39;

EXPR_35:right -> EXPR_37;

STMT_34:expr -> EXPR_35;

STMT_26:next -> STMT_34;

STMT_25:body -> STMT_26;

STMT_21:body -> STMT_25;

STMT_40 [label="{STMT_RETURN | { <decl> decl | <init_expr> init_expr | <expr> expr | <next_expr> next_expr | <body> body | <else_body> else_body | <next> next }}"];

EXPR_41 [label="{EXPR_INTEGER_LITERAL | { 0 }}"];

STMT_40:expr -> EXPR_41;

STMT_21:next -> STMT_40;

STMT_18:next -> STMT_21;

STMT_14:next -> STMT_18;

STMT_12:next -> STMT_14;

DECL_10:code -> STMT_12;

}

