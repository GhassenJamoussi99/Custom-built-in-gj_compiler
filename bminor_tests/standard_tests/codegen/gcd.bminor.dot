digraph AST {

node [shape=record]

DECL_0 [label="{DECL_gcd | { <type> type | <value> value | <code> code | <next> next }}"];

TYPE_1 [label="{TYPE_FUNCTION| { <subtype> subtype | <params> params}}"];

SUBTYPE_1 [label="{TYPE_INTEGER | { <subtype> subtype | <params> params }}"];

TYPE_1:subtype -> SUBTYPE_1;

PARAM_2 [label="{PARAM | { <name> name | <type> type | <next> next }}"];

SUBTYPE_3 [label="{TYPE_INTEGER | { <subtype> subtype | <params> params }}"];

PARAM_2:type -> TYPE_3;

PARAM_4 [label="{PARAM | { <name> name | <type> type | <next> next }}"];

SUBTYPE_5 [label="{TYPE_INTEGER | { <subtype> subtype | <params> params }}"];

PARAM_4:type -> TYPE_5;

PARAM_2:next -> PARAM_4;

TYPE_1:params -> PARAM_2;

DECL_0:type -> TYPE_1;

STMT_6 [label="{STMT_WHILE | { <decl> decl | <init_expr> init_expr | <expr> expr | <next_expr> next_expr | <body> body | <else_body> else_body | <next> next }}"];

EXPR_7 [label="{EXPR_NEQ | { <left> left | <right> right }}"];

EXPR_8 [label="{EXPR_NAME | { a }}"];

EXPR_7:left -> EXPR_8;

EXPR_9 [label="{EXPR_NAME | { b }}"];

EXPR_7:right -> EXPR_9;

STMT_6:expr -> EXPR_7;

STMT_10 [label="{STMT_BLOCK | { <decl> decl | <init_expr> init_expr | <expr> expr | <next_expr> next_expr | <body> body | <else_body> else_body | <next> next }}"];

STMT_11 [label="{STMT_IF_ELSE | { <decl> decl | <init_expr> init_expr | <expr> expr | <next_expr> next_expr | <body> body | <else_body> else_body | <next> next }}"];

EXPR_12 [label="{EXPR_GT | { <left> left | <right> right }}"];

EXPR_13 [label="{EXPR_NAME | { a }}"];

EXPR_12:left -> EXPR_13;

EXPR_14 [label="{EXPR_NAME | { b }}"];

EXPR_12:right -> EXPR_14;

STMT_11:expr -> EXPR_12;

STMT_15 [label="{STMT_EXPR | { <decl> decl | <init_expr> init_expr | <expr> expr | <next_expr> next_expr | <body> body | <else_body> else_body | <next> next }}"];

EXPR_16 [label="{EXPR_ASSIGN | { <left> left | <right> right }}"];

EXPR_17 [label="{EXPR_NAME | { a }}"];

EXPR_16:left -> EXPR_17;

EXPR_18 [label="{EXPR_SUBTRACT | { <left> left | <right> right }}"];

EXPR_19 [label="{EXPR_NAME | { a }}"];

EXPR_18:left -> EXPR_19;

EXPR_20 [label="{EXPR_NAME | { b }}"];

EXPR_18:right -> EXPR_20;

EXPR_16:right -> EXPR_18;

STMT_15:expr -> EXPR_16;

STMT_11:body -> STMT_15;

STMT_21 [label="{STMT_EXPR | { <decl> decl | <init_expr> init_expr | <expr> expr | <next_expr> next_expr | <body> body | <else_body> else_body | <next> next }}"];

EXPR_22 [label="{EXPR_ASSIGN | { <left> left | <right> right }}"];

EXPR_23 [label="{EXPR_NAME | { b }}"];

EXPR_22:left -> EXPR_23;

EXPR_24 [label="{EXPR_SUBTRACT | { <left> left | <right> right }}"];

EXPR_25 [label="{EXPR_NAME | { b }}"];

EXPR_24:left -> EXPR_25;

EXPR_26 [label="{EXPR_NAME | { a }}"];

EXPR_24:right -> EXPR_26;

EXPR_22:right -> EXPR_24;

STMT_21:expr -> EXPR_22;

STMT_11:else_body -> STMT_21;

STMT_10:body -> STMT_11;

STMT_6:body -> STMT_10;

STMT_27 [label="{STMT_RETURN | { <decl> decl | <init_expr> init_expr | <expr> expr | <next_expr> next_expr | <body> body | <else_body> else_body | <next> next }}"];

EXPR_28 [label="{EXPR_NAME | { a }}"];

STMT_27:expr -> EXPR_28;

STMT_6:next -> STMT_27;

DECL_0:code -> STMT_6;

DECL_0:next -> DECL_29;

DECL_29 [label="{DECL_main | { <type> type | <value> value | <code> code | <next> next }}"];

TYPE_30 [label="{TYPE_FUNCTION| { <subtype> subtype | <params> params}}"];

SUBTYPE_30 [label="{TYPE_INTEGER | { <subtype> subtype | <params> params }}"];

TYPE_30:subtype -> SUBTYPE_30;

DECL_29:type -> TYPE_30;

STMT_31 [label="{STMT_PRINT | { <decl> decl | <init_expr> init_expr | <expr> expr | <next_expr> next_expr | <body> body | <else_body> else_body | <next> next }}"];

EXPR_32 [label="{EXPR_ARG | { <left> left | <right> right }}"];

EXPR_33 [label="{EXPR_STRING_LITERAL | { \"GCD Tests\n\" }}"];

EXPR_32:left -> EXPR_33;

STMT_31:expr -> EXPR_32;

STMT_34 [label="{STMT_PRINT | { <decl> decl | <init_expr> init_expr | <expr> expr | <next_expr> next_expr | <body> body | <else_body> else_body | <next> next }}"];

EXPR_35 [label="{EXPR_ARG | { <left> left | <right> right }}"];

EXPR_36 [label="{EXPR_CALL | { <left> left | <right> right }}"];

EXPR_37 [label="{EXPR_NAME | { gcd }}"];

EXPR_36:left -> EXPR_37;

EXPR_38 [label="{EXPR_ARG | { <left> left | <right> right }}"];

EXPR_39 [label="{EXPR_INTEGER_LITERAL | { 48 }}"];

EXPR_38:left -> EXPR_39;

EXPR_40 [label="{EXPR_ARG | { <left> left | <right> right }}"];

EXPR_41 [label="{EXPR_INTEGER_LITERAL | { 18 }}"];

EXPR_40:left -> EXPR_41;

EXPR_38:right -> EXPR_40;

EXPR_36:right -> EXPR_38;

EXPR_35:left -> EXPR_36;

STMT_34:expr -> EXPR_35;

STMT_42 [label="{STMT_RETURN | { <decl> decl | <init_expr> init_expr | <expr> expr | <next_expr> next_expr | <body> body | <else_body> else_body | <next> next }}"];

EXPR_43 [label="{EXPR_INTEGER_LITERAL | { 0 }}"];

STMT_42:expr -> EXPR_43;

STMT_34:next -> STMT_42;

STMT_31:next -> STMT_34;

DECL_29:code -> STMT_31;

}

